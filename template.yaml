AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment of this stack of resources
  SNSTopicName:
    Type: String
    Description: Name of the sns topic
    Default: "fail-notifier"

# Mappings:
#   ResourcesName:
#     dev:
#       bookingArn: BookingTripDevArn
#       paymentArn: PaymentDevArn
#       offerArn: OfferDevArn
#     staging:
#       bookingArn: BookingTripStagingArn
#       paymentArn: PaymentStagingArn
#       offerArn: OfferStagingArn
#     prod:
#       bookingArn: BookingTripProdArn
#       paymentArn: PaymentProdArn
#       offerArn: OfferProdArn

Resources:
  SNSNotifier:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: !Sub ${SNSTopicName}-${Environment} 
      # Subscription: 
      #   - Subscription
      TopicName: !Sub ${SNSTopicName}-${AWS::AccountId}-${Environment} 

  SNSDefaultSubscription:
    Type: AWS::SNS::Subscription
    Properties: 
      Endpoint: vish847255@gmail.com
      Protocol: email
      TopicArn: !Ref 'SNSNotifier'

  NotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 5
      Handler: app.lambdaHandler
      Environment:
        Variables:
          snsArn: !Ref 'SNSNotifier'
      Runtime: nodejs12.x
      CodeUri: notification-service/
      Events:
        CognitoTrigger:
          Type: Cognito
          Properties:
            Trigger: PreTokenGeneration
            UserPool: !Ref UserPool

  LogTrigger:
    Type: AWS::Logs::SubscriptionFilter
    Properties: 
      LogGroupName: /aws/lambda/post-authentication
      FilterPattern: '?ERROR'
      DestinationArn: !GetAtt 
        - NotifierFunction
        - Arn